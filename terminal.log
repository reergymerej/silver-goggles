Script started on Sat Nov 18 10:12:21 2017
[?1034hbash-3.2$ git status
On branch master
Your branch is up-to-date with 'origin/master'.
Untracked files:
  (use "git add <file>..." to include in what will be committed)

	[31mpublic/06.txt[m
	[31mterminal.log[m

nothing added to commit but untracked files present (use "git add" to track)
bash-3.2$ git add .
bash-3.2$ git status
On branch master
Your branch is up-to-date with 'origin/master'.
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

	[32mnew file:   public/06.txt[m
	[32mnew file:   terminal.log[m

bash-3.2$ git commit
[?1000h[?2004h[?1049h[?1h=[?2004h[1;40r[?12;25h[?12l[?25h[27m[m[38;5;252m[48;5;234m[H[2J[?25l[40;1H"~/Ideas/blog/site/.git/COMMIT_EDITMSG" 10L, 291C[2;1Hâ–½[6n[2;1H  [1;1H[>c[1;1H[38;5;243m[48;5;235m  1 [m[38;5;252m[48;5;234m
[38;5;208m[48;5;235m2   [m[38;5;252m[48;5;234m[38;5;59m[48;5;236m# Please enter the commit message for your changes. Lines starting[m[38;5;252m[48;5;234m[48;5;236m                              [m[38;5;252m[48;5;234m[3;1H[38;5;243m[48;5;235m  1 [m[38;5;252m[48;5;234m[38;5;59m# with '#' will be ignored, and an empty message aborts the commit.[m[38;5;252m[48;5;234m
[38;5;243m[48;5;235m  2 [m[38;5;252m[48;5;234m[38;5;59m# On branch [m[38;5;252m[48;5;234m[38;5;141mmaster[m[38;5;252m[48;5;234m
[38;5;243m[48;5;235m  3 [m[38;5;252m[48;5;234m[38;5;59m# Your branch is up-to-date with '[m[38;5;252m[48;5;234m[38;5;141morigin/master[m[38;5;252m[48;5;234m[38;5;59m'.[m[38;5;252m[48;5;234m
[38;5;243m[48;5;235m  4 [m[38;5;252m[48;5;234m[38;5;59m#[m[38;5;252m[48;5;234m
[38;5;243m[48;5;235m  5 [m[38;5;252m[48;5;234m[38;5;59m# [m[38;5;252m[48;5;234m[38;5;148mChanges to be committed:[m[38;5;252m[48;5;234m
[38;5;243m[48;5;235m  6 [m[38;5;252m[48;5;234m[38;5;59m#       [m[38;5;252m[48;5;234m[38;5;81mnew file[m[38;5;252m[48;5;234m[38;5;59m: [m[38;5;252m[48;5;234m[38;5;141m  public/06.txt[m[38;5;252m[48;5;234m
[38;5;243m[48;5;235m  7 [m[38;5;252m[48;5;234m[38;5;59m#       [m[38;5;252m[48;5;234m[38;5;81mnew file[m[38;5;252m[48;5;234m[38;5;59m: [m[38;5;252m[48;5;234m[38;5;141m  terminal.log[m[38;5;252m[48;5;234m
[38;5;243m[48;5;235m  8 [m[38;5;252m[48;5;234m[38;5;59m#[m[38;5;252m[48;5;234m
[38;5;237m~                                                                                                   [12;1H~                                                                                                   [13;1H~                                                                                                   [14;1H~                                                                                                   [15;1H~                                                                                                   [16;1H~                                                                                                   [17;1H~                                                                                                   [18;1H~                                                                                                   [19;1H~                                                                                                   [20;1H~                                                                                                   [21;1H~                                                                                                   [22;1H~                                                                                                   [23;1H~                                                                                                   [24;1H~                                                                                                   [25;1H~                                                                                                   [26;1H~                                                                                                   [27;1H~                                                                                                   [28;1H~                                                                                                   [29;1H~                                                                                                   [30;1H~                                                                                                   [31;1H~                                                                                                   [32;1H~                                                                                                   [33;1H~                                                                                                   [34;1H~                                                                                                   [35;1H~                                                                                                   [36;1H~                                                                                                   [37;1H~                                                                                                   [38;1H~                                                                                                   [m[38;5;252m[48;5;234m[39;1H[7m[38;5;59m[48;5;234m.git/COMMIT_EDITMSG                                                               2,1            All[2;5H[?12l[?25h[?1000l[?1002h[?25l[m[38;5;252m[48;5;234m[40;90Hi[2;5H[40;90H [2;5H[40;1H[38;5;186m-- INSERT --[m[38;5;252m[48;5;234m[40;13H[K[2;5H[?12l[?25h[?25l[40;1H[K[2;5H[?12l[?25h[?25l[40;90Hg[2;5H[?12l[?25h[?25l[40;90H [2;5H[40;90Hgg[2;5H[40;90H  [1;5H[38;5;208m[48;5;235m1   [m[38;5;252m[48;5;234m[48;5;236m                                                                                                [m[38;5;252m[48;5;234m[2;1H[38;5;243m[48;5;235m  1 [m[38;5;252m[48;5;234m[38;5;59m# Please enter the commit message for your changes. Lines starting[m[38;5;252m[48;5;234m[2;71H[K[3;3H[38;5;243m[48;5;235m2
  3
  4
  5
  6
  7
  8
  9[m[38;5;252m[48;5;234m[39;83H[7m[38;5;59m[48;5;234m1,0-1[1;5H[?12l[?25h[?25l[m[38;5;252m[48;5;234m[40;90Hi[1;5H[40;90H [1;5H[40;1H[38;5;186m-- INSERT --[m[38;5;252m[48;5;234m[39;85H[7m[38;5;59m[48;5;234m1  [1;5H[?12l[?25h[?25l[m[38;5;252m[48;5;234m[38;5;81m[48;5;236ma[m[38;5;252m[48;5;234m[39;21H[7m[38;5;59m[48;5;234m[+][61C2[1;6H[?12l[?25h[?25l[m[38;5;252m[48;5;234m[38;5;81m[48;5;236md[m[38;5;252m[48;5;234m[39;85H[7m[38;5;59m[48;5;234m3[1;7H[?12l[?25h[?25l[m[38;5;252m[48;5;234m[40;1H[K[39;85H[7m[38;5;59m[48;5;234m2[1;6H[?12l[?25h[?25l[m[38;5;252m[48;5;234m[40;1HType  :qa!  and press <Enter> to abandon all changes and exit Vim[1;6H[?12l[?25h[?25l[40;90H^Z[1;6H[40;1H
[39;49m[?2004l[?1l>[?12l[?25h[?1049l[?1002l[?2004l
[1]+  Stopped                 git commit
bash-3.2$ fg
git commit
[?1002h[?2004h[?1049h[?1h=[?2004h[?12;25h[?12l[?25h[27m[m[38;5;252m[48;5;234m[H[2J[?25l[1;1H[38;5;208m[48;5;235m1   [m[38;5;252m[48;5;234m[38;5;81m[48;5;236mad[m[38;5;252m[48;5;234m[48;5;236m                                                                                              [m[38;5;252m[48;5;234m[2;1H[38;5;243m[48;5;235m  1 [m[38;5;252m[48;5;234m[38;5;59m# Please enter the commit message for your changes. Lines starting[m[38;5;252m[48;5;234m
[38;5;243m[48;5;235m  2 [m[38;5;252m[48;5;234m[38;5;59m# with '#' will be ignored, and an empty message aborts the commit.[m[38;5;252m[48;5;234m
[38;5;243m[48;5;235m  3 [m[38;5;252m[48;5;234m[38;5;59m# On branch [m[38;5;252m[48;5;234m[38;5;141mmaster[m[38;5;252m[48;5;234m
[38;5;243m[48;5;235m  4 [m[38;5;252m[48;5;234m[38;5;59m# Your branch is up-to-date with '[m[38;5;252m[48;5;234m[38;5;141morigin/master[m[38;5;252m[48;5;234m[38;5;59m'.[m[38;5;252m[48;5;234m
[38;5;243m[48;5;235m  5 [m[38;5;252m[48;5;234m[38;5;59m#[m[38;5;252m[48;5;234m
[38;5;243m[48;5;235m  6 [m[38;5;252m[48;5;234m[38;5;59m# [m[38;5;252m[48;5;234m[38;5;148mChanges to be committed:[m[38;5;252m[48;5;234m
[38;5;243m[48;5;235m  7 [m[38;5;252m[48;5;234m[38;5;59m#       [m[38;5;252m[48;5;234m[38;5;81mnew file[m[38;5;252m[48;5;234m[38;5;59m: [m[38;5;252m[48;5;234m[38;5;141m  public/06.txt[m[38;5;252m[48;5;234m
[38;5;243m[48;5;235m  8 [m[38;5;252m[48;5;234m[38;5;59m#       [m[38;5;252m[48;5;234m[38;5;81mnew file[m[38;5;252m[48;5;234m[38;5;59m: [m[38;5;252m[48;5;234m[38;5;141m  terminal.log[m[38;5;252m[48;5;234m
[38;5;243m[48;5;235m  9 [m[38;5;252m[48;5;234m[38;5;59m#[m[38;5;252m[48;5;234m
[38;5;237m~                                                                                                   [12;1H~                                                                                                   [13;1H~                                                                                                   [14;1H~                                                                                                   [15;1H~                                                                                                   [16;1H~                                                                                                   [17;1H~                                                                                                   [18;1H~                                                                                                   [19;1H~                                                                                                   [20;1H~                                                                                                   [21;1H~                                                                                                   [22;1H~                                                                                                   [23;1H~                                                                                                   [24;1H~                                                                                                   [25;1H~                                                                                                   [26;1H~                                                                                                   [27;1H~                                                                                                   [28;1H~                                                                                                   [29;1H~                                                                                                   [30;1H~                                                                                                   [31;1H~                                                                                                   [32;1H~                                                                                                   [33;1H~                                                                                                   [34;1H~                                                                                                   [35;1H~                                                                                                   [36;1H~                                                                                                   [37;1H~                                                                                                   [38;1H~                                                                                                   [m[38;5;252m[48;5;234m[39;1H[7m[38;5;59m[48;5;234m.git/COMMIT_EDITMSG [+]                                                           1,2            All[1;6H[?12l[?25h[?25l[?12l[?25h[?25l[m[38;5;252m[48;5;234m[40;90H:[1;6H[40;90H[K[40;1H:[?2004h[?12l[?25hq[?25l[40;2H[K[40;2H[?12l[?25h [?25l[1;6H[?12l[?25h[?25l[40;90H:[1;6H[40;90H[K[40;1H:[?2004h[?12l[?25hwa[?25l[40;3H[K[40;3H[?12l[?25h[?25l[40;2H[K[40;2H[?12l[?25h [?25l[1;6H[?12l[?25h[?25l[40;90H:[1;6H[40;90H[K[40;1H:[?2004h[?12l[?25hqa![?25l[?1002l[?2004l[40;1H[K[40;1H[?2004l[?1l>[?12l[?25h[?1049lAborting commit due to empty commit message.
bash-3.2$ "[Kco[K[Kecho "Sorry. I keep forgetting to commit inline.  Opening Vim really messes with the logig ng [K[K[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Kgi ng of commands."
Sorry. I keep forgetting to commit inline.  Opening Vim really messes with the logging of commands.
bash-3.2$ git commit -m '[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Kgit commit --help
[?1049h[?1h=GIT-COMMIT(1)                           Git Manual                           GIT-COMMIT(1)

[1mNAME[0m
       git-commit - Record changes to the repository

[1mSYNOPSIS[0m
       [4mgit[24m [4mcommit[24m [-a | --interactive | --patch] [-s] [-v] [-u<mode>] [--amend]
                  [--dry-run] [(-c | -C | --fixup | --squash) <commit>]
                  [-F <file> | -m <msg>] [--reset-author] [--allow-empty]
                  [--allow-empty-message] [--no-verify] [-e] [--author=<author>]
                  [--date=<date>] [--cleanup=<mode>] [--[no-]status]
                  [-i | -o] [-S[<keyid>]] [--] [<file>...]

[1mDESCRIPTION[0m
       Stores the current contents of the index in a new commit along with a log message
       from the user describing the changes.

       The content to be added can be specified in several ways:

        1. by using [4mgit[24m [4madd[24m to incrementally "add" changes to the index before using the
           [4mcommit[24m command (Note: even modified files must be "added");

        2. by using [4mgit[24m [4mrm[24m to remove files from the working tree and the index, again
           before using the [4mcommit[24m command;

        3. by listing files as arguments to the [4mcommit[24m command, in which case the commit
           will ignore changes staged in the index, and instead record the current content
           of the listed files (which must already be known to Git);

        4. by using the -a switch with the [4mcommit[24m command to automatically "add" changes
           from all known files (i.e. all files that are already listed in the index) and
           to automatically "rm" files in the index that have been removed from the
           working tree, and then perform the actual commit;

        5. by using the --interactive or --patch switches with the [4mcommit[24m command to
           decide one by one which files or hunks should be part of the commit, before
           finalizing the operation. See the "Interactive Mode" section of [1mgit-add[0m(1) to
           learn how to operate these modes.

:[K[K/[Kee[Kmm[Kpp[Ktt[Kyy[K[1;1HGIT-COMMIT(1)                           Git Manual                           GIT-COMMIT(1)
[2;1H
[3;1H[1mNAME[0m
[4;1H       git-commit - Record changes to the repository
[5;1H
[6;1H[1mSYNOPSIS[0m
[7;1H       [4mgit[24m [4mcommit[24m [-a | --interactive | --patch] [-s] [-v] [-u<mode>] [--amend]
[8;1H                  [--dry-run] [(-c | -C | --fixup | --squash) <commit>]
[9;1H                  [-F <file> | -m <msg>] [--reset-author] [--allow-empty]
[10;1H                  [--allow-empty-message] [--no-verify] [-e] [--author=<author>]
[11;1H                  [--date=<date>] [--cleanup=<mode>] [--[no-]status]
[12;1H                  [-i | -o] [-S[<keyid>]] [--] [<file>...]
[13;1H
[14;1H[1mDESCRIPTION[0m
[15;1H       Stores the current contents of the index in a new commit along with a log message
[16;1H       from the user describing the changes.
[17;1H
[18;1H       The content to be added can be specified in several ways:
[19;1H
[20;1H        1. by using [4mgit[24m [4madd[24m to incrementally "add" changes to the index before using the
[21;1H           [4mcommit[24m command (Note: even modified files must be "added");
[22;1H
[23;1H        2. by using [4mgit[24m [4mrm[24m to remove files from the working tree and the index, again
[24;1H           before using the [4mcommit[24m command;
[25;1H
[26;1H        3. by listing files as arguments to the [4mcommit[24m command, in which case the commit
[27;1H           will ignore changes staged in the index, and instead record the current content
[28;1H           of the listed files (which must already be known to Git);
[29;1H
[30;1H        4. by using the -a switch with the [4mcommit[24m command to automatically "add" changes
[31;1H           from all known files (i.e. all files that are already listed in the index) and
[32;1H           to automatically "rm" files in the index that have been removed from the
[33;1H           working tree, and then perform the actual commit;
[34;1H
[35;1H        5. by using the --interactive or --patch switches with the [4mcommit[24m command to
[36;1H           decide one by one which files or hunks should be part of the commit, before
[37;1H           finalizing the operation. See the "Interactive Mode" section of [1mgit-add[0m(1) to
[38;1H           learn how to operate these modes.
[39;1H
[40;1H[1;1HGIT-COMMIT(1)                           Git Manual                           GIT-COMMIT(1)
[2;1H
[3;1H[1mNAME[0m
[4;1H       git-commit - Record changes to the repository
[5;1H
[6;1H[1mSYNOPSIS[0m
[7;1H       [4mgit[24m [4mcommit[24m [-a | --interactive | --patch] [-s] [-v] [-u<mode>] [--amend]
[8;1H                  [--dry-run] [(-c | -C | --fixup | --squash) <commit>]
[9;1H                  [-F <file> | -m <msg>] [--reset-author] [--allow-[7mempty[27m]
[10;1H                  [--allow-[7mempty[27m-message] [--no-verify] [-e] [--author=<author>]
[11;1H                  [--date=<date>] [--cleanup=<mode>] [--[no-]status]
[12;1H                  [-i | -o] [-S[<keyid>]] [--] [<file>...]
[13;1H
[14;1H[1mDESCRIPTION[0m
[15;1H       Stores the current contents of the index in a new commit along with a log message
[16;1H       from the user describing the changes.
[17;1H
[18;1H       The content to be added can be specified in several ways:
[19;1H
[20;1H        1. by using [4mgit[24m [4madd[24m to incrementally "add" changes to the index before using the
[21;1H           [4mcommit[24m command (Note: even modified files must be "added");
[22;1H
[23;1H        2. by using [4mgit[24m [4mrm[24m to remove files from the working tree and the index, again
[24;1H           before using the [4mcommit[24m command;
[25;1H
[26;1H        3. by listing files as arguments to the [4mcommit[24m command, in which case the commit
[27;1H           will ignore changes staged in the index, and instead record the current content
[28;1H           of the listed files (which must already be known to Git);
[29;1H
[30;1H        4. by using the -a switch with the [4mcommit[24m command to automatically "add" changes
[31;1H           from all known files (i.e. all files that are already listed in the index) and
[32;1H           to automatically "rm" files in the index that have been removed from the
[33;1H           working tree, and then perform the actual commit;
[34;1H
[35;1H        5. by using the --interactive or --patch switches with the [4mcommit[24m command to
[36;1H           decide one by one which files or hunks should be part of the commit, before
[37;1H           finalizing the operation. See the "Interactive Mode" section of [1mgit-add[0m(1) to
[38;1H           learn how to operate these modes.
[39;1H
[40;1H       The --dry-run option can be used to obtain a summary of what is included by any of
       the above for the next commit by giving the same set of parameters (options and
       paths).

       If you make a commit and then find a mistake immediately after that, you can
       recover from it with [4mgit[24m [4mreset[24m.

[1mOPTIONS[0m
:[K[K[?1l>[?1049lbash-3.2$ git commit --allow-empty
[?1000h[?2004h[?1049h[?1h=[?2004h[1;40r[?12;25h[?12l[?25h[27m[m[38;5;252m[48;5;234m[H[2J[?25l[40;1H"~/Ideas/blog/site/.git/COMMIT_EDITMSG" 13L, 353C[2;1Hâ–½[6n[2;1H  [1;1H[>c[1;1H[38;5;208m[48;5;235m1   [m[38;5;252m[48;5;234m[48;5;236m                                                                                                [m[38;5;252m[48;5;234m[2;1H[38;5;243m[48;5;235m  1 [m[38;5;252m[48;5;234m[38;5;59m# Please enter the commit message for your changes. Lines starting[m[38;5;252m[48;5;234m
[38;5;243m[48;5;235m  2 [m[38;5;252m[48;5;234m[38;5;59m# with '#' will be ignored, and an empty message aborts the commit.[m[38;5;252m[48;5;234m
[38;5;243m[48;5;235m  3 [m[38;5;252m[48;5;234m[38;5;59m# On branch [m[38;5;252m[48;5;234m[38;5;141mmaster[m[38;5;252m[48;5;234m
[38;5;243m[48;5;235m  4 [m[38;5;252m[48;5;234m[38;5;59m# Your branch is up-to-date with '[m[38;5;252m[48;5;234m[38;5;141morigin/master[m[38;5;252m[48;5;234m[38;5;59m'.[m[38;5;252m[48;5;234m
[38;5;243m[48;5;235m  5 [m[38;5;252m[48;5;234m[38;5;59m#[m[38;5;252m[48;5;234m
[38;5;243m[48;5;235m  6 [m[38;5;252m[48;5;234m[38;5;59m# [m[38;5;252m[48;5;234m[38;5;148mChanges to be committed:[m[38;5;252m[48;5;234m
[38;5;243m[48;5;235m  7 [m[38;5;252m[48;5;234m[38;5;59m#       [m[38;5;252m[48;5;234m[38;5;81mnew file[m[38;5;252m[48;5;234m[38;5;59m: [m[38;5;252m[48;5;234m[38;5;141m  public/06.txt[m[38;5;252m[48;5;234m
[38;5;243m[48;5;235m  8 [m[38;5;252m[48;5;234m[38;5;59m#       [m[38;5;252m[48;5;234m[38;5;81mnew file[m[38;5;252m[48;5;234m[38;5;59m: [m[38;5;252m[48;5;234m[38;5;141m  terminal.log[m[38;5;252m[48;5;234m
[38;5;243m[48;5;235m  9 [m[38;5;252m[48;5;234m[38;5;59m#[m[38;5;252m[48;5;234m
[38;5;243m[48;5;235m 10 [m[38;5;252m[48;5;234m[38;5;59m# [m[38;5;252m[48;5;234m[38;5;148mChanges not staged for commit:[m[38;5;252m[48;5;234m
[38;5;243m[48;5;235m 11 [m[38;5;252m[48;5;234m[38;5;59m#       [m[38;5;252m[48;5;234m[38;5;81mmodified[m[38;5;252m[48;5;234m[38;5;59m: [m[38;5;252m[48;5;234m[38;5;141m  terminal.log[m[38;5;252m[48;5;234m
[38;5;243m[48;5;235m 12 [m[38;5;252m[48;5;234m[38;5;59m#[m[38;5;252m[48;5;234m
[38;5;237m~                                                                                                   [15;1H~                                                                                                   [16;1H~                                                                                                   [17;1H~                                                                                                   [18;1H~                                                                                                   [19;1H~                                                                                                   [20;1H~                                                                                                   [21;1H~                                                                                                   [22;1H~                                                                                                   [23;1H~                                                                                                   [24;1H~                                                                                                   [25;1H~                                                                                                   [26;1H~                                                                                                   [27;1H~                                                                                                   [28;1H~                                                                                                   [29;1H~                                                                                                   [30;1H~                                                                                                   [31;1H~                                                                                                   [32;1H~                                                                                                   [33;1H~                                                                                                   [34;1H~                                                                                                   [35;1H~                                                                                                   [36;1H~                                                                                                   [37;1H~                                                                                                   [38;1H~                                                                                                   [m[38;5;252m[48;5;234m[39;1H[7m[38;5;59m[48;5;234m.git/COMMIT_EDITMSG                                                               1,0-1          All[1;5H[?12l[?25h[?1000l[?1002h[?25l[m[38;5;252m[48;5;234m[40;90H:[1;5H[40;1H[K[40;1H:[?2004h[?12l[?25h[?25l[40;1H[K[1;5H[?12l[?25h[?25l[40;90H:[1;5H[40;90H[K[40;1H:[?2004h[?12l[?25hq![?25l[?1002l[?2004l[40;1H[K[40;1H[?2004l[?1l>[?12l[?25h[?1049lAborting commit due to empty commit message.
bash-3.2$ git commit -m '' --allow-empty
Aborting commit due to empty commit message.
bash-3.2$ git commit -m '' --allow-empty
bash-3.2$ git commit --e[Khelp
[?1049h[?1h=GIT-COMMIT(1)                           Git Manual                           GIT-COMMIT(1)

[1mNAME[0m
       git-commit - Record changes to the repository

[1mSYNOPSIS[0m
       [4mgit[24m [4mcommit[24m [-a | --interactive | --patch] [-s] [-v] [-u<mode>] [--amend]
                  [--dry-run] [(-c | -C | --fixup | --squash) <commit>]
                  [-F <file> | -m <msg>] [--reset-author] [--allow-empty]
                  [--allow-empty-message] [--no-verify] [-e] [--author=<author>]
                  [--date=<date>] [--cleanup=<mode>] [--[no-]status]
                  [-i | -o] [-S[<keyid>]] [--] [<file>...]

[1mDESCRIPTION[0m
       Stores the current contents of the index in a new commit along with a log message
       from the user describing the changes.

       The content to be added can be specified in several ways:

        1. by using [4mgit[24m [4madd[24m to incrementally "add" changes to the index before using the
           [4mcommit[24m command (Note: even modified files must be "added");

        2. by using [4mgit[24m [4mrm[24m to remove files from the working tree and the index, again
           before using the [4mcommit[24m command;

        3. by listing files as arguments to the [4mcommit[24m command, in which case the commit
           will ignore changes staged in the index, and instead record the current content
           of the listed files (which must already be known to Git);

        4. by using the -a switch with the [4mcommit[24m command to automatically "add" changes
           from all known files (i.e. all files that are already listed in the index) and
           to automatically "rm" files in the index that have been removed from the
           working tree, and then perform the actual commit;

        5. by using the --interactive or --patch switches with the [4mcommit[24m command to
           decide one by one which files or hunks should be part of the commit, before
           finalizing the operation. See the "Interactive Mode" section of [1mgit-add[0m(1) to
           learn how to operate these modes.

:[K[K/[Kee[Kmm[Kpp[Ktt[Kyy[K[1;1HGIT-COMMIT(1)                           Git Manual                           GIT-COMMIT(1)
[2;1H
[3;1H[1mNAME[0m
[4;1H       git-commit - Record changes to the repository
[5;1H
[6;1H[1mSYNOPSIS[0m
[7;1H       [4mgit[24m [4mcommit[24m [-a | --interactive | --patch] [-s] [-v] [-u<mode>] [--amend]
[8;1H                  [--dry-run] [(-c | -C | --fixup | --squash) <commit>]
[9;1H                  [-F <file> | -m <msg>] [--reset-author] [--allow-empty]
[10;1H                  [--allow-empty-message] [--no-verify] [-e] [--author=<author>]
[11;1H                  [--date=<date>] [--cleanup=<mode>] [--[no-]status]
[12;1H                  [-i | -o] [-S[<keyid>]] [--] [<file>...]
[13;1H
[14;1H[1mDESCRIPTION[0m
[15;1H       Stores the current contents of the index in a new commit along with a log message
[16;1H       from the user describing the changes.
[17;1H
[18;1H       The content to be added can be specified in several ways:
[19;1H
[20;1H        1. by using [4mgit[24m [4madd[24m to incrementally "add" changes to the index before using the
[21;1H           [4mcommit[24m command (Note: even modified files must be "added");
[22;1H
[23;1H        2. by using [4mgit[24m [4mrm[24m to remove files from the working tree and the index, again
[24;1H           before using the [4mcommit[24m command;
[25;1H
[26;1H        3. by listing files as arguments to the [4mcommit[24m command, in which case the commit
[27;1H           will ignore changes staged in the index, and instead record the current content
[28;1H           of the listed files (which must already be known to Git);
[29;1H
[30;1H        4. by using the -a switch with the [4mcommit[24m command to automatically "add" changes
[31;1H           from all known files (i.e. all files that are already listed in the index) and
[32;1H           to automatically "rm" files in the index that have been removed from the
[33;1H           working tree, and then perform the actual commit;
[34;1H
[35;1H        5. by using the --interactive or --patch switches with the [4mcommit[24m command to
[36;1H           decide one by one which files or hunks should be part of the commit, before
[37;1H           finalizing the operation. See the "Interactive Mode" section of [1mgit-add[0m(1) to
[38;1H           learn how to operate these modes.
[39;1H
[40;1H[1;1HGIT-COMMIT(1)                           Git Manual                           GIT-COMMIT(1)
[2;1H
[3;1H[1mNAME[0m
[4;1H       git-commit - Record changes to the repository
[5;1H
[6;1H[1mSYNOPSIS[0m
[7;1H       [4mgit[24m [4mcommit[24m [-a | --interactive | --patch] [-s] [-v] [-u<mode>] [--amend]
[8;1H                  [--dry-run] [(-c | -C | --fixup | --squash) <commit>]
[9;1H                  [-F <file> | -m <msg>] [--reset-author] [--allow-[7mempty[27m]
[10;1H                  [--allow-[7mempty[27m-message] [--no-verify] [-e] [--author=<author>]
[11;1H                  [--date=<date>] [--cleanup=<mode>] [--[no-]status]
[12;1H                  [-i | -o] [-S[<keyid>]] [--] [<file>...]
[13;1H
[14;1H[1mDESCRIPTION[0m
[15;1H       Stores the current contents of the index in a new commit along with a log message
[16;1H       from the user describing the changes.
[17;1H
[18;1H       The content to be added can be specified in several ways:
[19;1H
[20;1H        1. by using [4mgit[24m [4madd[24m to incrementally "add" changes to the index before using the
[21;1H           [4mcommit[24m command (Note: even modified files must be "added");
[22;1H
[23;1H        2. by using [4mgit[24m [4mrm[24m to remove files from the working tree and the index, again
[24;1H           before using the [4mcommit[24m command;
[25;1H
[26;1H        3. by listing files as arguments to the [4mcommit[24m command, in which case the commit
[27;1H           will ignore changes staged in the index, and instead record the current content
[28;1H           of the listed files (which must already be known to Git);
[29;1H
[30;1H        4. by using the -a switch with the [4mcommit[24m command to automatically "add" changes
[31;1H           from all known files (i.e. all files that are already listed in the index) and
[32;1H           to automatically "rm" files in the index that have been removed from the
[33;1H           working tree, and then perform the actual commit;
[34;1H
[35;1H        5. by using the --interactive or --patch switches with the [4mcommit[24m command to
[36;1H           decide one by one which files or hunks should be part of the commit, before
[37;1H           finalizing the operation. See the "Interactive Mode" section of [1mgit-add[0m(1) to
[38;1H           learn how to operate these modes.
[39;1H
[40;1H       The --dry-run option can be used to obtain a summary of what is included by any of
       the above for the next commit by giving the same set of parameters (options and
       paths).

       If you make a commit and then find a mistake immediately after that, you can
       recover from it with [4mgit[24m [4mreset[24m.

[1mOPTIONS[0m
:[K[K/[K       -a, --all
:[K[K/[K...skipping...
       --allow-[7mempty[27m
           Usually recording a commit that has the exact same tree as its sole parent
           commit is a mistake, and the command prevents you from making such a commit.
           This option bypasses the safety, and is primarily for use by foreign SCM
           interface scripts.

       --allow-[7mempty[27m-message
           Like --allow-[7mempty[27m this command is primarily for use by foreign SCM interface
           scripts. It allows you to create a commit with an [7mempty[27m commit message without
           using plumbing commands like [1mgit-commit-tree[0m(1).

       --cleanup=<mode>
           This option determines how the supplied commit message should be cleaned up
           before committing. The [4m<mode>[24m can be strip, whitespace, verbatim, scissors or
           default.

           strip
               Strip leading and trailing [7mempty[27m lines, trailing whitespace, commentary and
               collapse consecutive [7mempty[27m lines.

           whitespace
               Same as strip except #commentary is not removed.

           verbatim
               Do not change the message at all.

           scissors
               Same as whitespace, except that everything from (and including) the line "#
               ------------------------ >8 ------------------------" is truncated if the
               message is to be edited. "#" can be customized with core.commentChar.

           default
               Same as strip if the message is to be edited. Otherwise whitespace.

           The default can be changed by the [4mcommit.cleanup[24m configuration variable (see
           [1mgit-config[0m(1)).

       -e, --edit
           The message taken from file with -F, command line with -m, and from commit
:[K[K[?1l>[?1049lbash-3.2$ git commit --allow-empty-message
[?1000h[?2004h[?1049h[?1h=[?2004h[1;40r[?12;25h[?12l[?25h[27m[m[38;5;252m[48;5;234m[H[2J[?25l[40;1H"~/Ideas/blog/site/.git/COMMIT_EDITMSG" 13L, 353C[2;1Hâ–½[6n[2;1H  [1;1H[>c[1;1H[38;5;208m[48;5;235m1   [m[38;5;252m[48;5;234m[48;5;236m                                                                                                [m[38;5;252m[48;5;234m[2;1H[38;5;243m[48;5;235m  1 [m[38;5;252m[48;5;234m[38;5;59m# Please enter the commit message for your changes. Lines starting[m[38;5;252m[48;5;234m
[38;5;243m[48;5;235m  2 [m[38;5;252m[48;5;234m[38;5;59m# with '#' will be ignored, and an empty message aborts the commit.[m[38;5;252m[48;5;234m
[38;5;243m[48;5;235m  3 [m[38;5;252m[48;5;234m[38;5;59m# On branch [m[38;5;252m[48;5;234m[38;5;141mmaster[m[38;5;252m[48;5;234m
[38;5;243m[48;5;235m  4 [m[38;5;252m[48;5;234m[38;5;59m# Your branch is up-to-date with '[m[38;5;252m[48;5;234m[38;5;141morigin/master[m[38;5;252m[48;5;234m[38;5;59m'.[m[38;5;252m[48;5;234m
[38;5;243m[48;5;235m  5 [m[38;5;252m[48;5;234m[38;5;59m#[m[38;5;252m[48;5;234m
[38;5;243m[48;5;235m  6 [m[38;5;252m[48;5;234m[38;5;59m# [m[38;5;252m[48;5;234m[38;5;148mChanges to be committed:[m[38;5;252m[48;5;234m
[38;5;243m[48;5;235m  7 [m[38;5;252m[48;5;234m[38;5;59m#       [m[38;5;252m[48;5;234m[38;5;81mnew file[m[38;5;252m[48;5;234m[38;5;59m: [m[38;5;252m[48;5;234m[38;5;141m  public/06.txt[m[38;5;252m[48;5;234m
[38;5;243m[48;5;235m  8 [m[38;5;252m[48;5;234m[38;5;59m#       [m[38;5;252m[48;5;234m[38;5;81mnew file[m[38;5;252m[48;5;234m[38;5;59m: [m[38;5;252m[48;5;234m[38;5;141m  terminal.log[m[38;5;252m[48;5;234m
[38;5;243m[48;5;235m  9 [m[38;5;252m[48;5;234m[38;5;59m#[m[38;5;252m[48;5;234m
[38;5;243m[48;5;235m 10 [m[38;5;252m[48;5;234m[38;5;59m# [m[38;5;252m[48;5;234m[38;5;148mChanges not staged for commit:[m[38;5;252m[48;5;234m
[38;5;243m[48;5;235m 11 [m[38;5;252m[48;5;234m[38;5;59m#       [m[38;5;252m[48;5;234m[38;5;81mmodified[m[38;5;252m[48;5;234m[38;5;59m: [m[38;5;252m[48;5;234m[38;5;141m  terminal.log[m[38;5;252m[48;5;234m
[38;5;243m[48;5;235m 12 [m[38;5;252m[48;5;234m[38;5;59m#[m[38;5;252m[48;5;234m
[38;5;237m~                                                                                                   [15;1H~                                                                                                   [16;1H~                                                                                                   [17;1H~                                                                                                   [18;1H~                                                                                                   [19;1H~                                                                                                   [20;1H~                                                                                                   [21;1H~                                                                                                   [22;1H~                                                                                                   [23;1H~                                                                                                   [24;1H~                                                                                                   [25;1H~                                                                                                   [26;1H~                                                                                                   [27;1H~                                                                                                   [28;1H~                                                                                                   [29;1H~                                                                                                   [30;1H~                                                                                                   [31;1H~                                                                                                   [32;1H~                                                                                                   [33;1H~                                                                                                   [34;1H~                                                                                                   [35;1H~                                                                                                   [36;1H~                                                                                                   [37;1H~                                                                                                   [38;1H~                                                                                                   [m[38;5;252m[48;5;234m[39;1H[7m[38;5;59m[48;5;234m.git/COMMIT_EDITMSG                                                               1,0-1          All[1;5H[?12l[?25h[?1000l[?1002h[?25l[m[38;5;252m[48;5;234m[40;90H:[1;5H[40;1H[K[40;1H:[?2004h[?12l[?25hq![?25l[?1002l[?2004l[40;1H[K[40;1H[?2004l[?1l>[?12l[?25h[?1049l[master a8d4115] 
 2 files changed, 82 insertions(+)
 create mode 100644 public/06.txt
 create mode 100644 terminal.log
bash-3.2$ git push
Counting objects: 5, done.
Delta compression using up to 8 threads.
Compressing objects:  25% (1/4)   Compressing objects:  50% (2/4)   Compressing objects:  75% (3/4)   Compressing objects: 100% (4/4)   Compressing objects: 100% (4/4), done.
Writing objects:  20% (1/5)   Writing objects:  40% (2/5)   Writing objects:  60% (3/5)   Writing objects:  80% (4/5)   Writing objects: 100% (5/5)   Writing objects: 100% (5/5), 1.27 KiB | 0 bytes/s, done.
Total 5 (delta 2), reused 0 (delta 0)
remote: Resolving deltas:   0% (0/2)   [Kremote: Resolving deltas:  50% (1/2)   [Kremote: Resolving deltas: 100% (2/2)   [Kremote: Resolving deltas: 100% (2/2), completed with 2 local objects.[K
To git@github.com:reergymerej/silver-goggles.git
   6f9037f..a8d4115  master -> master
bash-3.2$ ./[K[Kgit add . && git commit --m[K[Km 'start c[Kaltering entry indexing script'
[master 1537923] start altering entry indexing script
 3 files changed, 416 insertions(+), 1 deletion(-)
bash-3.2$ ./ [Kscripts/index-entries.js
01.txt
02.txt
03.txt
04.txt
05.txt
06.txt
["01.txt","02.txt","03.txt","04.txt","05.txt","06.txt"]
bash-3.2$ ./scripts/index-entries.js[C[C[C[C[C[C[C[C[C[Cgit add . && git commit -m 'start altering entry indexing script'[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K-allow-empty-em[K[Kmessage
[?1000h[?2004h[?1049h[?1h=[?2004h[1;40r[?12;25h[?12l[?25h[27m[m[38;5;252m[48;5;234m[H[2J[?25l[40;1H"~/Ideas/blog/site/.git/COMMIT_EDITMSG" 11L, 358C[2;1Hâ–½[6n[2;1H  [1;1H[>c[1;1H[38;5;208m[48;5;235m1   [m[38;5;252m[48;5;234m[48;5;236m                                                                                                [m[38;5;252m[48;5;234m[2;1H[38;5;243m[48;5;235m  1 [m[38;5;252m[48;5;234m[38;5;59m# Please enter the commit message for your changes. Lines starting[m[38;5;252m[48;5;234m
[38;5;243m[48;5;235m  2 [m[38;5;252m[48;5;234m[38;5;59m# with '#' will be ignored, and an empty message aborts the commit.[m[38;5;252m[48;5;234m
[38;5;243m[48;5;235m  3 [m[38;5;252m[48;5;234m[38;5;59m# On branch [m[38;5;252m[48;5;234m[38;5;141mmaster[m[38;5;252m[48;5;234m
[38;5;243m[48;5;235m  4 [m[38;5;252m[48;5;234m[38;5;59m# Your branch is ahead of '[m[38;5;252m[48;5;234m[38;5;141morigin/master[m[38;5;252m[48;5;234m[38;5;59m' by 1 commit.[m[38;5;252m[48;5;234m
[38;5;243m[48;5;235m  5 [m[38;5;252m[48;5;234m[38;5;59m#   (use "git push" to publish your local commits)[m[38;5;252m[48;5;234m
[38;5;243m[48;5;235m  6 [m[38;5;252m[48;5;234m[38;5;59m#[m[38;5;252m[48;5;234m
[38;5;243m[48;5;235m  7 [m[38;5;252m[48;5;234m[38;5;59m# [m[38;5;252m[48;5;234m[38;5;148mChanges to be committed:[m[38;5;252m[48;5;234m
[38;5;243m[48;5;235m  8 [m[38;5;252m[48;5;234m[38;5;59m#       [m[38;5;252m[48;5;234m[38;5;81mmodified[m[38;5;252m[48;5;234m[38;5;59m: [m[38;5;252m[48;5;234m[38;5;141m  scripts/index-entries.js[m[38;5;252m[48;5;234m
[38;5;243m[48;5;235m  9 [m[38;5;252m[48;5;234m[38;5;59m#       [m[38;5;252m[48;5;234m[38;5;81mmodified[m[38;5;252m[48;5;234m[38;5;59m: [m[38;5;252m[48;5;234m[38;5;141m  terminal.log[m[38;5;252m[48;5;234m
[38;5;243m[48;5;235m 10 [m[38;5;252m[48;5;234m[38;5;59m#[m[38;5;252m[48;5;234m
[38;5;237m~                                                                                                   [13;1H~                                                                                                   [14;1H~                                                                                                   [15;1H~                                                                                                   [16;1H~                                                                                                   [17;1H~                                                                                                   [18;1H~                                                                                                   [19;1H~                                                                                                   [20;1H~                                                                                                   [21;1H~                                                                                                   [22;1H~                                                                                                   [23;1H~                                                                                                   [24;1H~                                                                                                   [25;1H~                                                                                                   [26;1H~                                                                                                   [27;1H~                                                                                                   [28;1H~                                                                                                   [29;1H~                                                                                                   [30;1H~                                                                                                   [31;1H~                                                                                                   [32;1H~                                                                                                   [33;1H~                                                                                                   [34;1H~                                                                                                   [35;1H~                                                                                                   [36;1H~                                                                                                   [37;1H~                                                                                                   [38;1H~                                                                                                   [m[38;5;252m[48;5;234m[39;1H[7m[38;5;59m[48;5;234m.git/COMMIT_EDITMSG                                                               1,0-1          All[1;5H[?12l[?25h[?1000l[?1002h[?25l[m[38;5;252m[48;5;234m[40;90H:[1;5H[40;1H[K[40;1H:[?2004h[?12l[?25hq[?25l[?1002l[?2004l[40;1H[K[40;1H[?2004l[?1l>[?12l[?25h[?1049l[master 5062039] 
 2 files changed, 17 insertions(+), 3 deletions(-)
bash-3.2$ git add . && git commit --allow-empty-message[C[C[C[C[C[C[C[C[C[C[19P./scripts/index-entries.js
[{"commentary":"01.txt","resources":{}},{"commentary":"02.txt","resources":{}},{"commentary":"03.txt","resources":{}},{"commentary":"04.txt","resources":{}},{"commentary":"05.txt","resources":{}},{"commentary":"06.txt","resources":{}}]
bash-3.2$ git add . && git commit -m ''[Kread file contents instead of name'
[master 9a4b976] read file contents instead of name
 2 files changed, 18 insertions(+), 3 deletions(-)
bash-3.2$ ./scripts/index-entries.js
[{"commentary":"So I was thinking I'd like to do something meaningful.  What in the world\ncould that be?  Helping people seems to universally work as a way to find\nmeaning.  What can I help with?  \"Here's a website.  It will help you!\"  I\ndon't know.\n\nMaybe starting a blog or some type of resource to help people learn to code\nwould be cool.  There is no shortage of blogs or tech articles out there,\nthough.  What could I do differently?\n\nOne thing you don't see is complete honesty.  It may be unprofessional and\nmaybe severely undermine confidence, but what if someone showed you their\nmistakes?  Not as a gag reel or some sort of ironic thing, but more as a\ncandid view.  That may make things more approachable.  Mistakes are valuable\nbecause you get to learn from them, so sharing your mistakes seems like it\nwould increase the value.\n\nSo, the idea is not to be an unpolished slacker, but to provide complete\nopenness along with instruction.  To start with, a blog probably shouldn't be\na finished, beautiful product.  It's basically an open journal, right?\nPunctuation and grammar are fine, but it should probably be pretty rough and\nraw.\n\nSo here, what the heck.  Let's start with this.  I'm not sure where I'm going,\nwhat the point is, or how it will turn out, but this is my project.  From\ninception to completion as transparent as possible, I'm going to document it.\n\n...\n\nIn the interest of _somewhat_ tolerable writing, I need to pick an audience,\nthough.  I'm going to imagine...\n\nWell, I trailed off imagining myself at different points in my life when I was\nlearing to program.\n\nScrew it.  I'm just going to talk to the terminal.  If I start talking to \"the\naudience\" the tone will change and I'll start worrying too much about _how_\nI'm saying things rather than _what_ I'm saying.\n\n...\n\nOK, so what are the goals?\n\n1.  Transparency - I want mistakes to be visible, ignorance to be highlighted,\nand the documentation to be off the cuff.  This is to show that even\nsuccessful dudes who have been writing and studying code for many years and\nare pretty good at what they do are just regular guys full of doubt,\nignorance, and potential mistakes.\n\n2.  Create a Blog - The blog should be super easy to update (to encourage it\nhappen regularly), provide lots of detail, and have very \"raw\" content.\n\nI would like to get something up ASAP, so that it doesn't all appear at once\nat the end of the project.  Honestly, most (practically all) of my projects\ndie the day after I start them.  I get really pumped, start working, get\nsidetracked with infrastructure or find another cooler idea along the way...\nThere's always something, so the sooner I can get this \"launched\" the better\nchange it has of surviving past next week.\n\n\nWhat's the absolute fastest way to get an app out there into the world?  This\nis not a paid promotion, but I bet I can get this into the world in the next\n10 minutes with CRA and Heroku.\n\nHere's the plan.\n\n1.  create the app\n2.  post this as static content\n3.  deploy as a new free app in Heroku\n\n\n(Side note: It's going to become a pain in the ass documenting all of this\nstuff.  Maybe I could just log the terminal history or something.)\n\n```\ncreate-react-app site\n```\n\nI may elaborate on all this stuff later, but maybe not.  There are plenty of\nsources out there already.\n\nThis file is 01.txt in the dir above the `site` dir I just created.\n\n```\n/Users/jeremygreer/Ideas/blog/\nâ–¼ site/\n  â–º public/\n  â–º src/\n    package.json\n    README.md\n    yarn.lock\n  01.txt\n```\n\nI'm sure I'll have resources _other_ than the site, but now I need to move the\ntext into the site.  What if I just symlink it and keep it separate for now?\nI don't know what that may do.  Let's just keep it simple and move.\n\n```\n</jeremygreer/Ideas/blog/site/\nâ–¼ public/\n    01.txt\n    favicon.ico\n    index.html\n    manifest.json\nâ–º src/\n  package.json\n  README.md\n  yarn.lock\n```\n\nOK, simple.  For the first pass, we'll just have links from the main site to\nthe resource.  That's kind of cool.  I like the resources be just plain old\ntext.  That makes them portable (they should probably be markdown though).\n\n...\n\nI just added a link from the boilerplate to the text file.  That works for\nnow.  It's ocurred to me that I will be referencing code a _lot_ in this - and\nin particular states.  I'll need a good way to document that.  Let's just rely\non Git for now.\n\nThere.  Check 31b6c302d2ee643ef22e943a6b9a38dc891f1c0b to see where things\nstand for now.  I'll have to make this project public and actually push it to\nGithub.  Maybe there's a good convention for referencing SHAs in a blog.  I\ndon't want to keep making Gists ever 12 seconds.\n\n...\n\nI just created the repo with the suggested name.  I haven't done that in a\nwhile.  https://github.com/reergymerej/silver-goggles\n\nNow it's very public.  I hope work doesn't watch my commits in Github if I get\ninspired in the middle of the day to do a little writing.\n\n...\n\nI'm trying to login to Heroku with the toolbelt, but I'm seeing some weird\nerrors.\n\n```\n~/Ideas/blog/site$ heroku login\n â–¸    stat /Users/jeremygreer/.local/share/heroku/client/bin/heroku: not a directory\n â–¸    fork/exec /Users/jeremygreer/.local/share/heroku/client/bin/heroku: not a directory\n â–¸    stat /Users/jeremygreer/.local/share/heroku/client/bin/heroku: not a directory\n â–¸    fork/exec /Users/jeremygreer/.local/share/heroku/client/bin/heroku: not a directory\n```\n\nI wonder if this is because of the High Sierra upgrade.  It smells like it, so\nI opened XCode because it needs to install dependencies and get my signature\non EULA and crap sometimes and I heard from work there may be something.  It\ncouldn't hurt.\n\nnope\n\nDoes it work from other directories where I used to use it?\n\nnope\n\nCan I reinstall it?  I think I used brew, but I'll just check Heroku.\n\n...wait...\n\nI've got down lots of rabbit holes.  This always happens.  What am I trying to\ndo?  Create an app in Heroku and get the URL.  I can do that through the GUI\neasily and figure out this crap later.\n\n...and done 1 minute later.\n\nI wonder if there's a way to timestamp each line of the text document.  That\nwould be cool to show _how long_ it takes to write the text.\n\n...\n\nDang it.\n\n```\n~/Ideas/blog/site$ git remote -v\norigin\tgit@github.com:reergymerej/silver-goggles.git (fetch)\norigin\tgit@github.com:reergymerej/silver-goggles.git (push)\n~/Ideas/blog/site$ git remote add heroku https://git.heroku.com/silver-goggles.git\n~/Ideas/blog/site$ git remote -v\nheroku\thttps://git.heroku.com/silver-goggles.git (fetch)\nheroku\thttps://git.heroku.com/silver-goggles.git (push)\norigin\tgit@github.com:reergymerej/silver-goggles.git (fetch)\norigin\tgit@github.com:reergymerej/silver-goggles.git (push)\n~/Ideas/blog/site$ git status\nOn branch master\nYour branch is up-to-date with 'origin/master'.\nChanges to be committed:\n  (use \"git reset HEAD <file>...\" to unstage)\n\n\tmodified:   public/01.txt\n\n~/Ideas/blog/site$ fg\nnvim .\n\n[1]+  Stopped                 nvim .\n~/Ideas/blog/site$ git commit -m 'setup heroku remote'\n[master 5582472] setup heroku remote\n 1 file changed, 54 insertions(+)\n~/Ideas/blog/site$ git push heroku master\nremote: !\tYour account jeremy.greer@XXXXXXXXXXXXXXXX.com does not have access to silver-goggles.\nfatal: unable to access 'https://git.heroku.com/silver-goggles.git/': The requested URL returned error: 403\n~/Ideas/blog/site$ heroku login\n â–¸    stat /Users/jeremygreer/.local/share/heroku/client/bin/heroku: not a directory\n â–¸    fork/exec /Users/jeremygreer/.local/share/heroku/client/bin/heroku: not a directory\n â–¸    stat /Users/jeremygreer/.local/share/heroku/client/bin/heroku: not a directory\n â–¸    fork/exec /Users/jeremygreer/.local/share/heroku/client/bin/heroku: not a directory\n~/Ideas/blog/site$\n\n```\n\nI guess I'll have to login with the toolbelt afterall.  :D\n\n```\n  538  brew install heroku/brew/heroku\n  539  brew link --overwrite heroku\n  540  heroku login\n```\n\nProblem solved.  I have to use my personal credentials instead of work.  I\ninstalled a Heroku plugin to manage both, but it never seemed to work.  I just\nget my password from Lastpass and login manually.  It's often easier to do\nthings the dumb way.\n\n\n```\n  544  git add .\n  545  git status\n  546  git commit\n  547  git push heroku master\n  548  git status\n  549  fg\n  550  fg\n  551  history\n  552  history\n\n  ...\n\nremote: -----> Build failed\nremote:\nremote:  !     Outdated Yarn lockfile\n```\n\nDang it.\n\n```\n  554  yarn\n  555  git add .\n  556  git commit\n  557  git push heroku master\n  558  heroku open\n```\n\nThar she blows.\n\nWe're online.  Now let's not suck.\n","resources":{}},{"commentary":"While driving to the store and whatnot I got a chance to think about this a\nlittle bit more.  More than anything, I want this to be _REALLY_ easy to add\nentries to.  Ideally, it could even be a terminal thing that uploads after the\nfact.  I want it to be _very_ easy to add content.\n\nI also want a way for the reader to simulate being here with me while I go\nthrough things.  There's already the idea of timestamping text.  That's cool.\nI'll also want to show lots of terminal commands and results.  Maybe I can\njust route it to a file and include it as a resource.  Eventually, we'll want\nto include screenshots and/or videos/gifs as well.\n\nEric Elliot has his whole shotgun ride along thing.  That's cool, but video\nisn't searchable... unless it's transcribed.  Whatever.  I'm no Elliot.  I can\ndo my own thing here.\n\nOne consideration is, I want the content to be adaptable.  Right now it's just\nformatted text, so it looks like those old html spec docs you run into here\nand there.  It would be nice if, as the project progressed, the content is\ndisplayed better.  Adding markdown parsing is an obvious way to do that.  I'm\nnot sure right now about images and videos.\n\n\n#idea - I may run across passwords or email coming through in the text.  There\nshould be some type of auto-redact process.\n\n\nAs an aside, it's fun to start a project, even if it seems dumb, because you\nstart to get all these other ideas as you go along.  Another point is you are\nnever quite sure what the idea is at first.  It invariably changes as you go\nalong, which is part of what I want to capture here.\n\n...\n\nI know I can redirect the terminal output using `somecommand > file.txt`, but\nhow can I do it while also reading?\n\nhttps://askubuntu.com/questions/420981/how-do-i-save-terminal-output-to-a-file\n\n`tee` seems a good candidate, but I've never used it.  I only remember reading\nabout it in the Node docs.\n\n\n```\nman tee\n\n\nDESCRIPTION\n     The tee utility copies standard input to standard output, making a copy\n     in zero or more files.  The output is unbuffered.\n```\n\nSo something like\n\n```\nprintenv | tee output.txt\n```\n\nwill show the environment variables _and_ save the output to the log.  That's\ncool for a single command, but I don't want to pipe everything.  I'll surely\nforget.\n\nAfter searching a bit, I've seen `script` referenced a few times.  I wonder if\nit would be useful to also log the things I'm searching and reading?  I bet\nso.  We'll have to figure out a way to include web history.\n\nLet's see what `script` is all about.\n\n\n```\nman script\n\n\nDESCRIPTION\n     The script utility makes a typescript of everything printed on your terminal.  It is\n     useful for students who need a hardcopy record of an interactive session as proof of\n     an assignment, as the typescript file can be printed out later with lpr(1).\n\n```\n\nWow.  This is pretty close to perfect, except the result looks like garbage.\nThere's a log of formatting and whatnot in it.  Still...\n\n`script ./terminal.log` starts dumping all the output to `./terminal.log`\nuntil I call `exit`.  Pretty good.  Now how do we clear it up?\n\nhttps://superuser.com/questions/236930/how-to-clean-up-output-of-linux-script-command\n\n`col -bfp < terminal.log` seems pretty decent.  It fixes most of the\nformatting, but it looks like you can still see some weirdness like when I\ncompulsively clear the terminal with `cmd+k`.\n\nLet's to another quick test to see what it outputs.\n\nHere's the unprocessed version.\n\n```\nScript started on Fri Nov 17 19:08:34 2017\n\u001b[?1034hbash-3.2$ e\b\u001b[Kecho \"hello\"\r\nhello\r\nbash-3.2$ ls\r\nsite\t\tterminal.log\r\nbash-3.2$ cd site\r\nbash-3.2$ ls\r\nREADME.md\tnode_modules\tpackage.json\tpublic\t\tsrc\t\tyarn.lock\r\nbash-3.2$ man tee\r\n\u001b[?1049h\u001b[?1h\u001b=\r\r\nTEE(1)                    BSD General Commands Manual                   TEE(1)\r\n\r\n\u001b[1mNAME\u001b[0m\r\n     \u001b[1mtee\u001b[0m -- pipe fitting\r\n\r\n\u001b[1mSYNOPSIS\u001b[0m\r\n     \u001b[1mtee\u001b[0m [\u001b[1m-ai\u001b[0m] [\u001b[4mfile\u001b[24m \u001b[4m...\u001b[24m]\r\n\r\n\u001b[1mDESCRIPTION\u001b[0m\r\n     The \u001b[1mtee\u001b[0m utility copies standard input to standard output, making a copy in zero or\r\n     more files.  The output is unbuffered.\r\n\r\n     The following options are available:\r\n\r\n     \u001b[1m-a\u001b[0m      Append the output to the files rather than overwriting them.\r\n\r\n     \u001b[1m-i\u001b[0m      Ignore the SIGINT signal.\r\n\r\n     The following operands are available:\r\n\r\n     file  A pathname of an output \u001b[4mfile\u001b[24m.\r\n\r\n     The \u001b[1mtee\u001b[0m utility takes the default action for all signals, except in the event of the\r\n     \u001b[1m-i\u001b[0m option.\r\n\r\n     The \u001b[1mtee\u001b[0m utility exits 0 on success, and >0 if an error occurs.\r\n\r\n\u001b[1mSTANDARDS\u001b[0m\r\n     The \u001b[1mtee\u001b[0m function is expected to be POSIX IEEE Std 1003.2 (``POSIX.2'') compatible.\r\n\r\nBSD                              June 6, 1993                              BSD\r\n\u001b[7m(END)\u001b[27m\u001b[K\r\u001b[K\u001b[?1l\u001b>\u001b[?1049lbash-3.2$ exit\r\nexit\r\n\nScript done on Fri Nov 17 19:10:19 2017\n```\n\nAnd after running through `col -bfp < terminal.log > terminal.log.clean`...\n```\nScript started on Fri Nov 17 19:08:34 2017\n?1034hbash-3.2$ Kecho \"hello\"\nhello\nbash-3.2$ ls\nsite\t\tterminal.log\nbash-3.2$ cd site\nbash-3.2$ ls\nREADME.md\tnode_modules\tpackage.json\tpublic\t\tsrc\t\tyarn.lock\nbash-3.2$ man tee\n?1049h?1h\nTEE(1)\t\t\t  BSD General Commands Manual\t\t\tTEE(1)\n\n1mNAME0m\n     1mtee0m -- pipe fitting\n\n1mSYNOPSIS0m\n     1mtee0m [1m-ai0m] [4mfile24m 4m...24m]\n\n1mDESCRIPTION0m\n     The 1mtee0m utility copies standard input to standard output, making a copy in zero or\n     more files.  The output is unbuffered.\n\n     The following options are available:\n\n     1m-a0m\t Append the output to the files rather than overwriting them.\n\n     1m-i0m\t Ignore the SIGINT signal.\n\n     The following operands are available:\n\n     file  A pathname of an output 4mfile24m.\n\n     The 1mtee0m utility takes the default action for all signals, except in the event of the\n     1m-i0m option.\n\n     The 1mtee0m utility exits 0 on success, and >0 if an error occurs.\n\n1mSTANDARDS0m\n     The 1mtee0m function is expected to be POSIX IEEE Std 1003.2 (``POSIX.2'') compatible.\n\nBSD\t\t\t\t June 6, 1993\t\t\t\t   BSD\nK?1l?1049lbash-3.2$ exit\nexit\n\nScript done on Fri Nov 17 19:10:19 2017\n```\n\nThis is good.  It's better than nothing for sure.\n","resources":{}},{"commentary":"It's starting to become clear that we - I like saying \"we\" a lot when talking\nabout projects.  I don't know if it's to share credit with everyone or to\nminimize the \"I\" references - need a better way to add entries.\n\n...\n\nAs I was taking out the garbage, the idea for this started to change a bit.\nThere are several things I want to show.  My thoughts, coming through in text,\nthe commands and responses in the terminal, shown in the logs we're keeping\nnow, search/web history, code at different stages, and probably screenshots\nlater.  What if this could all be syncronized somehow?  Then the reader could\ngo through the text and see links to the code, images as we refer to them, a\nsideline of the links we visited, and the commands/results in the terminal.  I\nsuppose all of this kind of _is_ a web page.  The challenge comes from\naggregating all the stuff.\n\n...\n\nI don't know how to synchronize the text to a timeline...not sure if that's\neven useful...but I can add timestamps to the files or blocks easily enough.\n\n`:r !date`\n\nFri Nov 17 20:38:38 CST 2017\n\nOne of the problems I run into constantly is distraction.  I just had to reel\nmyself back in from looking at the code used to write a Chrome plugin that\nexports history to see if I could use a similar thing to include my browsing\nhistory here.  There were several detours until I finally snapped out of it\nand realized I was off course.  Adding my search results would be cool, but\nthat's not a priority right now.  I can include links.  Evenutally, it may be\na priority, but it's a distraction at this phase.  Shake it off and focus.\n\nSo what the heck are we doing?  We're trying to figure out a way to make\nadding entries easier.\n\n... and immediately I'm distracted...\n\nI will probably forget the commands I've figured out that I want to use here,\nso I'm going to note them in the README.\n\n...\n\nOK, I've indulged.  I took a few notes in the README.  I've found that so much\nlearning happens tangentally to the task at hand.  I used to get so upset at\nall the rabbit holes when I just wanted to make a thing that did blah.  I've\nsince learned that much of the process _is_ the process of learning and\nexploring the many subtasks that stand between you and the objective.\n\nBack to the main task.  How do we make it easier to add entries?  I like the\nwhole new text file in an editor thing.  The terminal commands are being\nlogged easily enough.  Maybe we'll just make a quick script to read the\ndirectory and spit out some JSON the app can use.\n\ncurrent commit: fb4ee94, fb4ee94aba4a8a6c1dba60d3cfdc3a642bc5eafb\nhttps://github.com/reergymerej/silver-goggles/commit/fb4ee94\n\nWhoops.  I always forget the shebang for Node.  225841b\n\nhttps://stackoverflow.com/questions/24253027/node-and-shebang-help-executing-via-command-line\n\nFirst, we need to read the directory, then we need to spit out JSON with each\nof the file names.  There are many very smart ways to do this, but we don't\nneed that.  We just need a fast and easy way.  This is not a permanent or\nperformant solution.\n\nIt serves us well to stop for a second and talk this through.  I was just\nabout to refresh myself on the Node fs API before I rememembered to write what\nI was thinking.  It is very likely I would have spent the rest of the night\nfiguring out cool ways to read the files, written some npm module to do it,\ngot distracted with npm configurations, and ended up stranded with some half\nassed other chunk of code when bedtime called.\n\nDon't do that.\n\nWe've got to constantly keep ourselves in check.  So, pride be damned.  Let's\nfind the easiest way to read files already sitting in npm waiting for us.\n\n...\n\ne7fd3a5\n\nWe've now got a script that reads our public directory and spits out some JSON\nin our source directory.  We _should_ (I hope) be able to use Webpack to load\nthis resource into the app and iterate over it.  Let's see!\n\n6332a4acb1cf72cd2f6e990fd8fd020470a227a4\n\nCool beans.  CRA is nicely configured.  Webpack's doing the magic, but CRA\ntook care of configuring it for us.  Super easy.\n","resources":{}},{"commentary":"\nFri Nov 17 21:37:40 CST 2017\n\nThis is a test to verify that new entries show up.  I also just committed the\nlog for the terminal.  Another problem has come up.  Those logs need to be\ntied to the entries.  For now, we'll just manually rename the to match the\nfilename of the entry it corresponds to.\n\n\nFri Nov 17 21:45:40 CST 2017\n\nIt's not showing the new entry in heroku.  I don't think the build step is\nhappening, so I added\n\n```\n    \"heroku-postbuild\": \"./scripts/index-entries.js\",\n```\n\nto package.json.  The movie my wife is watching is ending as is our session!\nOh no!  I'm panicking.\n\n\nFri Nov 17 21:53:25 CST 2017\n\nTo https://git.heroku.com/silver-goggles.git\n ! [remote rejected] master -> master (pre-receive hook declined)\nerror: failed to push some refs to 'https://git.heroku.com/silver-goggles.git'\n~/Ideas/blog/site$ heroku config:set NODE_MODULES_CACHE=false\nSetting NODE_MODULES_CACHE and r\n\n\nAfter several rejections, turning off the NODE_MODULES_CACHE let it through.\n","resources":{}},{"commentary":"\nSat Nov 18 06:44:19 CST 2017\n\nThis idea is starting to crystalize.  The problem is anyway.  It is difficult\nto write about code in a useful way.  There is code everywhere and lots of\narticles about it, often accompanied by code snippets or repos, but it seems\nlike there could be a better way to do it.  Recording my screen and voice\nwould capture everything I want, mistakes and all, but it doesn't result in a\nsearchable string of text.\n\nHow can we go into \"record mode\" and capture:\n\n* code as it's written\n* terminal i/o\n* screenshots\n* commentary\n","resources":{}},{"commentary":"\nSat Nov 18 09:58:47 CST 2017\n\nThere are two issues I'm thinking of.  The first is how to record all the\ndata.  The second is how to present it.  I'm figuring out ways to manage the\nfirst right now, but I'd like the presentation to work outside of how the data\nis collected.  I don't want to dictate how it's done or what tools should be\nused.  That's not really flexible.  So, although I'm figuring it out as I go,\nI'll just skip over the recording part for now.\n\nThe second part, the presentation, is what I want to focus on.  We've already\ngot a way to read entries and show them in the browser, but let's do something\nmore elaborate.  At a basic level, each entry in the system will contain...\n\n\n* commentary - This is the meat of the system.  This is what I'm writing now\n  and will be the primary content.\n\n* resources - Various types of additional content that enhance, and may be\n  referenced by, the commentary.\n\n** terminal logs - what I typed, what came out\n\n** code - a Git log or something that can refer to code in a particular state\n\n** images - screenshots gathered for the commentary\n\n** web history - pages visited during the commentary\n\n\nEventually, I want a way to present all of these together and somehow synced\nby time.  For starters, though, let's just put them all together.\n\nHow will we describe them to the system?\n\n```\n{\n  \"commentary\": \"blah blah blah\",\n  \"resources\": []\n}\n```\n\nI want the resources grouped by type.\n\n```\n{\n  \"commentary\": \"blah blah blah\",\n  \"resources\": {\n    \"terminal\": \"blah blah blah\",\n    \"code\": \"xxx\",\n    \"images\": [\n    ],\n    \"web-history\": [\n    ],\n  }\n}\n```\n\nSome of these resource types will be ordered lists.  For consistency, let's\nmake them all ordered lists, even if they contain only one thing.\n\n\n```\n{\n  \"commentary\": \"blah blah blah\",\n  \"resources\": {\n    \"terminal\": [\n      \"blah blah blah\"\n    ],\n    \"code\": [\n      \"xxx\"\n    ],\n    \"images\": [\n      \"xxx\"\n    ],\n    \"web-history\": [\n      \"xxx\"\n    ],\n  }\n}\n```\n\nIt is pretty easy to represent this stuff in the filesystem.  So we could have\neach entry (commentary, blog... I've got to figure out the names for things)\nreside in a directory.  That directory can optionally have subdirectories that\ndefine the attached resources.\n\nTODO: We'll have to standardize the resource names.\n\nBefore changing everything, let's rejigger the entries we spit out of our\n`index-entries.js` script and make sure the UI can understand this new\nstructure.  Then we can go back and change how the entries are read by the\nscript.\n","resources":{}}]
bash-3.2$ git log
[?1h=[33mcommit 9a4b976641859fc2ce81abd57ba696a32348059d[m[m
Author: Jeremy Greer <jeremy.greer.atl@gmail.com>[m
Date:   Sat Nov 18 10:25:40 2017 -0600[m
[m
    read file contents instead of name[m
[m
[33mcommit 506203990c676bcc3c875fb2bdb8bd8560593c79[m[m
Author: Jeremy Greer <jeremy.greer.atl@gmail.com>[m
Date:   Sat Nov 18 10:24:23 2017 -0600[m
[m
[33mcommit 153792355dbadd3c43ec2e22141b66b09d9c7295[m[m
Author: Jeremy Greer <jeremy.greer.atl@gmail.com>[m
Date:   Sat Nov 18 10:23:16 2017 -0600[m
[m
    start altering entry indexing script[m
[m
[33mcommit a8d411564ca1688b090482721efd73aacdc93694[m[m
Author: Jeremy Greer <jeremy.greer.atl@gmail.com>[m
Date:   Sat Nov 18 10:14:55 2017 -0600[m
[m
[33mcommit 6f9037fec7054160f5410b5afef8e601ad246a06[m[m
Author: Jeremy Greer <jeremy.greer.atl@gmail.com>[m
Date:   Sat Nov 18 06:50:33 2017 -0600[m
[m
    entries[m
[m
[33mcommit c3d31b15ac1b126d27162e71e902665021303b29[m[m
Author: Jeremy Greer <jeremy.greer.atl@gmail.com>[m
Date:   Fri Nov 17 21:49:28 2017 -0600[m
[m
    remove entries from build step[m
[m
[33mcommit 66604ab4dc68ebbdad77d5efb504f8bd08d8944d[m[m
Author: Jeremy Greer <jeremy.greer.atl@gmail.com>[m
Date:   Fri Nov 17 21:47:39 2017 -0600[m
[m
    add node-dir to regular dependencies[m
[m
[33mcommit 463a4c47c49e0286c19ec1100a1c792501b4972a[m[m
:[K[K:[K[K[?1l>bash-3.2$ git add src/ && git commi t-m '[K[K[K[K[K[Kt -m 'use[K[K[Kuse [K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K . && git commi t-m [K[K[K[K[Kt -m 'include name with entry definition'
[master de33f4a] include name with entry definition
 3 files changed, 59 insertions(+), 3 deletions(-)
bash-3.2$ ./scripts/r[Kindex-entries.js
/Users/jeremygreer/Ideas/blog/site/scripts/index-entries.js:17
    name: fs.base(entryFileName),
             ^

TypeError: fs.base is not a function
    at translateTextEntry (/Users/jeremygreer/Ideas/blog/site/scripts/index-entries.js:17:14)
    at Array.map (<anonymous>)
    at Object.<anonymous> (/Users/jeremygreer/Ideas/blog/site/scripts/index-entries.js:24:23)
    at Module._compile (module.js:624:30)
    at Object.Module._extensions..js (module.js:635:10)
    at Module.load (module.js:545:32)
    at tryModuleLoad (module.js:508:12)
    at Function.Module._load (module.js:500:3)
    at Function.Module.runMain (module.js:665:10)
    at startup (bootstrap_node.js:201:16)
bash-3.2$ ./scripts/index-entries.js
/Users/jeremygreer/Ideas/blog/site/scripts/index-entries.js:17
    name: fs.basename(entryFileName),
             ^

TypeError: fs.basename is not a function
    at translateTextEntry (/Users/jeremygreer/Ideas/blog/site/scripts/index-entries.js:17:14)
    at Array.map (<anonymous>)
    at Object.<anonymous> (/Users/jeremygreer/Ideas/blog/site/scripts/index-entries.js:24:23)
    at Module._compile (module.js:624:30)
    at Object.Module._extensions..js (module.js:635:10)
    at Module.load (module.js:545:32)
    at tryModuleLoad (module.js:508:12)
    at Function.Module._load (module.js:500:3)
    at Function.Module.runMain (module.js:665:10)
    at startup (bootstrap_node.js:201:16)
bash-3.2$ ./scripts/index-entries.js
bash-3.2$ git add .
bash-3.2$ git commit -m 'fi [Kx basename re[K[Kmethod call'
[master 331c144] fix basename method call
 3 files changed, 39 insertions(+), 3 deletions(-)
 rewrite src/entries.json (100%)
bash-3.2$ git add . && git commit -m 'start rene[Kdering entries'
[master 31c1362] start rendering entries
 2 files changed, 24 insertions(+), 4 deletions(-)
bash-3.2$ git add .
bash-3.2$ git commit -m[K-all[K[K[K[Km '' --ano[K[Kllow-empty-message
[master 36b4bc8] 
 3 files changed, 17 insertions(+), 1 deletion(-)
bash-3.2$ git add . git commi[K[K[K[K[K[K[K[K[K&& [K git commit -m '' --all[C[C[C[C[C[C[C[C[C[C[C[C[C[Ccommit -m '' --allow-empty-message
bash-3.2$ git add .
bash-3.2$ git [12@(reverse-i-search)`':[C[C[C[C[Cc': git commit -m '' --allow-empty-message[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1@o[C[C[C[C[C[C[C[14Pbash-3.2$[C[C[C[C[C[C
[master ae048fa] 
 3 files changed, 58 insertions(+), 2 deletions(-)
bash-3.2$ [12@(reverse-i-search)`':[C[12Pbash-3.2$[Cgit commit -m '' --allow-empty-message[C[C[C[C[C[C[C[C[C[C[C[C[C[Cadd .[K
bash-3.2$ git add .commit -m '' --allow-empty-message
[master 498a6e9] 
 3 files changed, 18 insertions(+), 6 deletions(-)
bash-3.2$ git add .
bash-3.2$ git commit -m 'show com[K[K[Kentries lest n[K[K[K[Kist [K[K[K[K[Kist next to current entry'
[master 39ee381] show entries list next to current entry
 4 files changed, 34 insertions(+), 12 deletions(-)
bash-3.2$ git d[Kadd . && git commit --[Km '' --allow-empty-message
[master 1dd78d8] 
 4 files changed, 31 insertions(+), 43 deletions(-)
 rewrite src/App.css (76%)
bash-3.2$ exit
exit

Script done on Sat Nov 18 10:53:12 2017
