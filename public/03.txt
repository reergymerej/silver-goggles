It's starting to become clear that we - I like saying "we" a lot when talking
about projects.  I don't know if it's to share credit with everyone or to
minimize the "I" references - need a better way to add entries.

...

As I was taking out the garbage, the idea for this started to change a bit.
There are several things I want to show.  My thoughts, coming through in text,
the commands and responses in the terminal, shown in the logs we're keeping
now, search/web history, code at different stages, and probably screenshots
later.  What if this could all be syncronized somehow?  Then the reader could
go through the text and see links to the code, images as we refer to them, a
sideline of the links we visited, and the commands/results in the terminal.  I
suppose all of this kind of _is_ a web page.  The challenge comes from
aggregating all the stuff.

...

I don't know how to synchronize the text to a timeline...not sure if that's
even useful...but I can add timestamps to the files or blocks easily enough.

`:r !date`

Fri Nov 17 20:38:38 CST 2017

One of the problems I run into constantly is distraction.  I just had to reel
myself back in from looking at the code used to write a Chrome plugin that
exports history to see if I could use a similar thing to include my browsing
history here.  There were several detours until I finally snapped out of it
and realized I was off course.  Adding my search results would be cool, but
that's not a priority right now.  I can include links.  Evenutally, it may be
a priority, but it's a distraction at this phase.  Shake it off and focus.

So what the heck are we doing?  We're trying to figure out a way to make
adding entries easier.

... and immediately I'm distracted...

I will probably forget the commands I've figured out that I want to use here,
so I'm going to note them in the README.

...

OK, I've indulged.  I took a few notes in the README.  I've found that so much
learning happens tangentally to the task at hand.  I used to get so upset at
all the rabbit holes when I just wanted to make a thing that did blah.  I've
since learned that much of the process _is_ the process of learning and
exploring the many subtasks that stand between you and the objective.

Back to the main task.  How do we make it easier to add entries?  I like the
whole new text file in an editor thing.  The terminal commands are being
logged easily enough.  Maybe we'll just make a quick script to read the
directory and spit out some JSON the app can use.

current commit: fb4ee94, fb4ee94aba4a8a6c1dba60d3cfdc3a642bc5eafb
https://github.com/reergymerej/silver-goggles/commit/fb4ee94

Whoops.  I always forget the shebang for Node.  225841b

https://stackoverflow.com/questions/24253027/node-and-shebang-help-executing-via-command-line

First, we need to read the directory, then we need to spit out JSON with each
of the file names.  There are many very smart ways to do this, but we don't
need that.  We just need a fast and easy way.  This is not a permanent or
performant solution.

It serves us well to stop for a second and talk this through.  I was just
about to refresh myself on the Node fs API before I rememembered to write what
I was thinking.  It is very likely I would have spent the rest of the night
figuring out cool ways to read the files, written some npm module to do it,
got distracted with npm configurations, and ended up stranded with some half
assed other chunk of code when bedtime called.

Don't do that.

We've got to constantly keep ourselves in check.  So, pride be damned.  Let's
find the easiest way to read files already sitting in npm waiting for us.

...

e7fd3a5

We've now got a script that reads our public directory and spits out some JSON
in our source directory.  We _should_ (I hope) be able to use Webpack to load
this resource into the app and iterate over it.  Let's see!
